"""Initial migration

Revision ID: 10e3168847bb
Revises: 
Create Date: 2025-04-12 17:10:45.865414

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '10e3168847bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trips',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('everyday',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('everyday_locations',
    sa.Column('everyday_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['everyday_id'], ['everyday.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('everyday_id', 'location_id')
    )
    op.create_table('optimized_routes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('everyday_id', sa.UUID(), nullable=False),
    sa.Column('total_distance', sa.Float(), nullable=False),
    sa.Column('total_duration', sa.Float(), nullable=False),
    sa.Column('transport_mode', sa.String(), nullable=False),
    sa.Column('round_trip', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['everyday_id'], ['everyday.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_segments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('route_id', sa.UUID(), nullable=False),
    sa.Column('segment_order', sa.Integer(), nullable=False),
    sa.Column('start_location_id', sa.UUID(), nullable=False),
    sa.Column('end_location_id', sa.UUID(), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('coordinates', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['end_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['optimized_routes.id'], ),
    sa.ForeignKeyConstraint(['start_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_segments')
    op.drop_table('optimized_routes')
    op.drop_table('everyday_locations')
    op.drop_table('everyday')
    op.drop_table('trips')
    op.drop_table('locations')
    # ### end Alembic commands ### 